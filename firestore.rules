
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is an admin
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- Users Collection Rules ---
    match /users/{userId} {
      // Any authenticated user can get any other user's profile for the messaging contact list.
      allow get: if isAuthenticated();
      // Only admins can list all users for the approval panel.
      allow list: if isAdmin();
      
      // A user can update their own profile, OR an admin can approve another user.
      // Admins can only change the 'isApproved' field.
      allow update: if request.auth.uid == userId ||
                       (isAdmin() && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isApproved']));
      
      // A user can only create their own user document during signup.
      // They cannot make themselves an admin or pre-approve themselves.
      allow create: if request.auth.uid == userId &&
                       request.resource.data.role != 'admin' &&
                       request.resource.data.isApproved == false;
      
      // No one can delete users for now to maintain data integrity.
      allow delete: if false;
    }

    // --- Conversations and Messages Rules ---
    match /conversations/{conversationId} {
      // Allow access if the user's UID is in the participantUids array.
      allow read, write: if isAuthenticated() && request.auth.uid in resource.data.participantUids;

      match /messages/{messageId} {
        // Allow access to messages if the user is a participant of the parent conversation.
        allow read, write: if isAuthenticated() && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantUids.hasAny([request.auth.uid]);
      }
    }
    
    // --- Organizational Data Rules (Positions and Personnel) ---
    // These rules allow any authenticated user to read and write data.
    match /merkez-positions/{docId} {
      allow read, write: if isAuthenticated();
    }
    
    match /merkez-personnel/{docId} {
      allow read, write: if isAuthenticated();
    }

    match /tasra-positions/{docId} {
      allow read, write: if isAuthenticated();
    }

    match /tasra-personnel/{docId} {
      allow read, write: if isAuthenticated();
    }
  }
}
