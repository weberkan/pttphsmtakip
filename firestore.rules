
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isParticipant(conversationId) {
      return request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantUids;
    }

    match /users/{userId} {
      // Allow users to read their own profile
      allow read: if request.auth.uid == userId;

      // Allow admin to read any user profile
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';

      // Allow users to create their own profile upon signup, but they cannot make themselves an admin or approved
      allow create: if request.auth.uid == userId && 
                     !('role' in request.resource.data) &&
                     request.resource.data.isApproved == false;
                     
      // Allow admin to update any user's approval status
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' &&
                     request.resource.data.isApproved == true;
    }

    match /merkez-positions/{docId} {
      allow read, write: if request.auth != null;
    }

    match /merkez-personnel/{docId} {
      allow read, write: if request.auth != null;
    }
    
    match /tasra-positions/{docId} {
      allow read, write: if request.auth != null;
    }

    match /tasra-personnel/{docId} {
      allow read, write: if request.auth != null;
    }

    // Messaging Rules
    match /conversations/{conversationId} {
      // Users can read/update a conversation if they are a participant
      allow read, update, delete: if request.auth.uid in resource.data.participantUids;
      // Users can create a conversation if they are a participant in the new conversation
      allow create: if request.auth.uid in request.resource.data.participantUids;
    }
    
    match /conversations/{conversationId}/messages/{messageId} {
        // Allow read if user is a participant
        allow read: if isParticipant(conversationId);
        
        // Allow create if user is a participant and the senderId is their own uid.
        allow create: if isParticipant(conversationId) && request.resource.data.senderId == request.auth.uid;
    }
  }
}
