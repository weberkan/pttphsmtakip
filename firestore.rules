
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Rule for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can read the list of users or a specific user's profile.
      // This is necessary for features like messaging and displaying user names.
      allow get, list: if request.auth != null;

      // A user can only update their own profile.
      allow update: if request.auth != null && request.auth.uid == userId;

      // Only admins can create or delete user documents from this collection.
      allow create, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the main data collections of the application.
    // Any authenticated user can read and write to these collections.
    // The application's UI is responsible for business logic (e.g., only showing a "delete" button to admins).
    match /merkez-positions/{docId} {
      allow read, write: if request.auth != null;
    }
    match /merkez-personnel/{docId} {
      allow read, write: if request.auth != null;
    }
    match /tasra-positions/{docId} {
      allow read, write: if request.auth != null;
    }
    match /tasra-personnel/{docId} {
      allow read, write: if request.auth != null;
    }
    match /talimatlar/{docId} {
      allow read, write: if request.auth != null;
    }
    match /depposh-files/{docId} {
      allow read, write: if request.auth != null;
    }
    
    // Rule for the 'notifications' collection
    match /notifications/{notificationId} {
      // Any authenticated user (or the system acting on their behalf) can create a notification.
      allow create: if request.auth != null;

      // Only the recipient of the notification can read, update, or delete it.
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.recipientUid;
    }
  }
}
